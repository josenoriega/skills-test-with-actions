# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  pull_request:
    branches: [ "main" ]

permissions:
    pull-requests: write

jobs:
  python-coverage:
     runs-on: ubuntu-latest

     steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Set up Python
          uses: actions/setup-python@v4
          with:
             python-version: 3.13
          
        - name: Install dependencies
          run: |
            pip install -r requirements.txt
            pip install pytest==8.4.1
            pip install coverage==7.9
            pip install pytest-cov=6.2.1

        - name: Run tests and generate coverage details
          run: pytest --cov=src 

        - name: Coverage comment
          uses: py-cov-action/python-coverage-comment-action@v3
          with:
             GITHUB_TOKEN: ${{ github.token }} 
             MINIMUM_GREEN: 90
             MINIMUM_ORANGE: 70

        - name: Fail if below threshold
          run: coverage report --fail-under=90 
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest --verbose
